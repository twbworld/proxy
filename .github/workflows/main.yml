name: ci
on:
  workflow_dispatch: #github页面手动触发
  push: #push即触发
    branches:
      - main
    paths-ignore: #不作为触发的文件
      - '.*'
      - 'LICENSE'
      - 'README.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.*'
      - 'LICENSE'
      - 'README.md'
  # workflow_run: #workflow执行顺序,当前文件最后执行;必须为默认分支,否则不会触发,好奇怪
  #   workflows:
  #     - ci
  #   branches:
  #     - main
  #   types:
  #     - completed #requested || completed ;上一个"完成才执行下一个"

jobs:
  codeql: #github给的默认模板
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    env:
      TZ: Asia/Shanghai
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language:
          - go
    steps:
    - uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  # ci:
  #   runs-on: ubuntu-latest
  #   env:
  #     TZ: Asia/Shanghai
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: php-actions/composer@v5
  #     - name: restart-mysql #该ubuntu-20.04自带mysql8.0
  #       run: sudo systemctl restart mysql
  #     - name: create-db
  #       run: sudo mysqladmin -uroot -proot create trojan
  #     - name: save-data
  #       run: sudo mysql -uroot -proot trojan < src/data/users.sql
  #     - name: add-envFile
  #       env:
  #         ENVDATA: '{"superUrl":["vmess://aa=="],"trojan":[{"domain":"www.domain.com","port":"80"}],"mysqlConfig":{"dbname":"trojan","host":"localhost","username":"root","password":"root"}}'
  #       run: sudo echo $ENVDATA > src/config/.env
  #     - name: use-php7.4
  #       run: | #使用7.4(该ubuntu-20.04自带7.4/php8.0(默认)); 卸载php8的xdebug, 并安装php7的xdebug
  #         sudo ln -sf /bin/php7.4 /bin/php
  #         sudo ln -sf /usr/bin/php7.4 /usr/bin/php
  #         sudo apt-get update
  #         sudo apt-get remove -y php-xdebug
  #         sudo apt-get install -y php-xdebug
  #         sudo systemctl restart php7.4-fpm
  #     - name: phpunit-test
  #       run: sudo XDEBUG_MODE=coverage ./vendor/bin/phpunit #如不设XDEBUG_MODE=coverage,则不生成coverage.xml

  #     # - uses: php-actions/phpunit@v2
  #     #   with:
  #     #     configuration: ./phpunit.xml
  #     #     version: 9.5.2
  #     #     php_version: 7.4
  #     #     php_extensions: xdebug mbstring mysqli pdo_mysql


  cd:
    # needs: ci
    runs-on: ubuntu-20.04
    env:
      TZ: Asia/Shanghai
    steps:
      - name: pull-repo
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /var/www/html/proxy/
            git checkout -- .
            git clean -df
            git checkout main
            git fetch origin main
            git reset --hard origin/main
      - name: handle-users #按逻辑:这一步骤应该以data/users.json来触发的,但是workflow_run不能使用paths
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker exec go /bin/bash -c 'go build -o server main.go && exit'
            docker restart go
            docker exec trojan /bin/bash -c 'systemctl restart trojan && exit'
            exit
